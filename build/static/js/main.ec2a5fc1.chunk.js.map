{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","Components/ContactElement/ContactElement.module.css","Components/Container/Container.module.css","Components/Section/Section.module.css","Components/Container/Container.js","Components/Section/Section.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactElement/ContactElement.js","Components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","protoType","PropTypes","string","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","onSubmit","resetForm","form","this","label","input","type","pattern","required","onChange","input_number","button","React","Component","Filter","filter","onChangeFilter","isRequired","func","ContactsEl","onDeleteContact","ce","box","btn","onClick","Contacts","contacts","deleteContact","c","list","map","item","App","addContact","data","prevState","some","includes","alert","currentId","changeFilter","toLocaleLowerCase","turnOnFilter","ContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec2a5fc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__15E_f\",\"label\":\"ContactForm_label__1FXjq\",\"input\":\"ContactForm_input__212Dk\",\"input-number\":\"ContactForm_input-number__Shg3N\",\"input_number\":\"ContactForm_input_number__2rUPe\",\"button\":\"ContactForm_button__8HP6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__yAtu1\",\"input\":\"Filter_input__ykOq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1SQ_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ContactElement_box__3u8wB\",\"btn\":\"ContactElement_btn__3OpW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3fP5b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__j6hgf\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.protoType = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends React.Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    this.props.onSubmit(contact);\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Enter name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"The name can only contain letters, apostrophe, dash and spaces. For example: Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Enter number\r\n          <input\r\n            className={s.input_number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"The phone number can consist of numerals, spaces, dashes, brackets and start with +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Save\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Enter the contact's name. Search is not sensitive to input characters.\"\r\n        required\r\n        onChange={onChangeFilter}\r\n        value={filter}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.protoType = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport ce from './ContactElement.module.css';\r\n\r\nconst ContactsEl = ({ name, number, id, onDeleteContact }) => (\r\n  <p className={ce.box}>\r\n    <span>{name}:</span>\r\n    <span>{number}</span>\r\n    <button\r\n      className={ce.btn}\r\n      type=\"button\"\r\n      onClick={() => onDeleteContact(id)}\r\n    >\r\n      Remove\r\n    </button>\r\n  </p>\r\n);\r\nContactsEl.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\nexport default ContactsEl;\r\n","import PropTypes from 'prop-types';\r\nimport c from './ContactList.module.css';\r\nimport ContactsEl from '../ContactElement/ContactElement';\r\n\r\nconst Contacts = ({ contacts, deleteContact }) => (\r\n  <ul className={c.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={c.item}>\r\n        <ContactsEl\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => deleteContact(id)}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nContacts.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Contacts;\r\n","import React from 'react';\nimport Container from './Components/Container';\nimport Section from './Components/Section';\nimport ContactForm from './Components/ContactForm';\nimport Filter from './Components/Filter';\nimport ContactList from './Components/ContactList';\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = data => {\n    this.setState(prevState => {\n      if (\n        prevState.contacts.some(contact => contact.name.includes(data.name))\n      ) {\n        return alert(`${data.name} is already in contacts!`);\n      }\n\n      return { contacts: [...prevState.contacts, data] };\n    });\n  };\n\n  deleteContact = currentId => {\n    this.setState(prevState => {\n      return {\n        contacts: [\n          ...prevState.contacts.filter(contact => contact.id !== currentId),\n        ],\n      };\n      // let indx = null;\n      // for (let i = 0; i < prevState.contacts.length; i += 1) {\n      //   if (prevState.contacts[i].id === currentId) {\n      //     indx = i;\n      //   }\n      // }\n      // prevState.contacts.splice(indx, 1);\n      // return { contacts: [...prevState.contacts] };\n    });\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value.toLocaleLowerCase() });\n  };\n\n  turnOnFilter = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter),\n    );\n  };\n\n  render() {\n    return (\n      <Container title=\"Phonebook\">\n        <Section title=\"You can add new contacts below:\">\n          <ContactForm onSubmit={this.addContact}></ContactForm>\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter\n            filter={this.state.filter}\n            onChangeFilter={this.changeFilter}\n          />\n          {this.state.filter === '' ? (\n            <ContactList\n              contacts={this.state.contacts}\n              deleteContact={this.deleteContact}\n            />\n          ) : (\n            <ContactList\n              contacts={this.turnOnFilter()}\n              deleteContact={this.deleteContact}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}